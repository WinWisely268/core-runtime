// Code generated by protoc-gen-go. DO NOT EDIT.
// source: baseproto.proto

package config

import (
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Config is basically a map<k,v>
// where k is always a string, and v is defined in the ConfigVal
type Config struct {
	Key                  string     `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Val                  *ConfigVal `protobuf:"bytes,2,opt,name=val,proto3" json:"val,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_822e52c9a4a56588, []int{0}
}

func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (m *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(m, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Config) GetVal() *ConfigVal {
	if m != nil {
		return m.Val
	}
	return nil
}

type ConfigVal struct {
	// Types that are valid to be assigned to Val:
	//	*ConfigVal_StringVal
	//	*ConfigVal_Uint64Val
	//	*ConfigVal_EmailVal
	//	*ConfigVal_CidrVal
	//	*ConfigVal_BoolVal
	//	*ConfigVal_DoubleVal
	Val                  isConfigVal_Val `protobuf_oneof:"val"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ConfigVal) Reset()         { *m = ConfigVal{} }
func (m *ConfigVal) String() string { return proto.CompactTextString(m) }
func (*ConfigVal) ProtoMessage()    {}
func (*ConfigVal) Descriptor() ([]byte, []int) {
	return fileDescriptor_822e52c9a4a56588, []int{1}
}

func (m *ConfigVal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigVal.Unmarshal(m, b)
}
func (m *ConfigVal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigVal.Marshal(b, m, deterministic)
}
func (m *ConfigVal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigVal.Merge(m, src)
}
func (m *ConfigVal) XXX_Size() int {
	return xxx_messageInfo_ConfigVal.Size(m)
}
func (m *ConfigVal) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigVal.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigVal proto.InternalMessageInfo

type isConfigVal_Val interface {
	isConfigVal_Val()
}

type ConfigVal_StringVal struct {
	StringVal string `protobuf:"bytes,1,opt,name=string_val,json=stringVal,proto3,oneof"`
}

type ConfigVal_Uint64Val struct {
	Uint64Val uint64 `protobuf:"varint,2,opt,name=uint64_val,json=uint64Val,proto3,oneof"`
}

type ConfigVal_EmailVal struct {
	EmailVal string `protobuf:"bytes,3,opt,name=email_val,json=emailVal,proto3,oneof"`
}

type ConfigVal_CidrVal struct {
	CidrVal []byte `protobuf:"bytes,4,opt,name=cidr_val,json=cidrVal,proto3,oneof"`
}

type ConfigVal_BoolVal struct {
	BoolVal bool `protobuf:"varint,5,opt,name=bool_val,json=boolVal,proto3,oneof"`
}

type ConfigVal_DoubleVal struct {
	DoubleVal float64 `protobuf:"fixed64,6,opt,name=double_val,json=doubleVal,proto3,oneof"`
}

func (*ConfigVal_StringVal) isConfigVal_Val() {}

func (*ConfigVal_Uint64Val) isConfigVal_Val() {}

func (*ConfigVal_EmailVal) isConfigVal_Val() {}

func (*ConfigVal_CidrVal) isConfigVal_Val() {}

func (*ConfigVal_BoolVal) isConfigVal_Val() {}

func (*ConfigVal_DoubleVal) isConfigVal_Val() {}

func (m *ConfigVal) GetVal() isConfigVal_Val {
	if m != nil {
		return m.Val
	}
	return nil
}

func (m *ConfigVal) GetStringVal() string {
	if x, ok := m.GetVal().(*ConfigVal_StringVal); ok {
		return x.StringVal
	}
	return ""
}

func (m *ConfigVal) GetUint64Val() uint64 {
	if x, ok := m.GetVal().(*ConfigVal_Uint64Val); ok {
		return x.Uint64Val
	}
	return 0
}

func (m *ConfigVal) GetEmailVal() string {
	if x, ok := m.GetVal().(*ConfigVal_EmailVal); ok {
		return x.EmailVal
	}
	return ""
}

func (m *ConfigVal) GetCidrVal() []byte {
	if x, ok := m.GetVal().(*ConfigVal_CidrVal); ok {
		return x.CidrVal
	}
	return nil
}

func (m *ConfigVal) GetBoolVal() bool {
	if x, ok := m.GetVal().(*ConfigVal_BoolVal); ok {
		return x.BoolVal
	}
	return false
}

func (m *ConfigVal) GetDoubleVal() float64 {
	if x, ok := m.GetVal().(*ConfigVal_DoubleVal); ok {
		return x.DoubleVal
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ConfigVal) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ConfigVal_StringVal)(nil),
		(*ConfigVal_Uint64Val)(nil),
		(*ConfigVal_EmailVal)(nil),
		(*ConfigVal_CidrVal)(nil),
		(*ConfigVal_BoolVal)(nil),
		(*ConfigVal_DoubleVal)(nil),
	}
}

func init() {
	proto.RegisterType((*Config)(nil), "config.Config")
	proto.RegisterType((*ConfigVal)(nil), "config.ConfigVal")
}

func init() { proto.RegisterFile("baseproto.proto", fileDescriptor_822e52c9a4a56588) }

var fileDescriptor_822e52c9a4a56588 = []byte{
	// 264 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x90, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0x86, 0xeb, 0x24, 0x4d, 0xed, 0x03, 0x09, 0xc8, 0x42, 0x05, 0x03, 0x56, 0x41, 0xc8, 0x53,
	0x90, 0x00, 0xb1, 0x30, 0x20, 0x85, 0xa5, 0x23, 0xca, 0xd0, 0x81, 0xa5, 0x38, 0x8d, 0xa9, 0x2c,
	0x4c, 0x8c, 0x52, 0xb7, 0x12, 0x3c, 0x2d, 0xcf, 0xc1, 0x84, 0xee, 0xdc, 0x76, 0x89, 0x4e, 0xff,
	0xf7, 0xdd, 0xaf, 0xf8, 0xe0, 0xa8, 0xd1, 0x2b, 0xf3, 0xd5, 0xfb, 0xe0, 0x4b, 0xfa, 0x16, 0xf9,
	0xc2, 0x77, 0xef, 0x76, 0x79, 0x76, 0xba, 0xd1, 0xce, 0xb6, 0x3a, 0x98, 0x9b, 0xdd, 0x10, 0x85,
	0xc9, 0x13, 0xe4, 0xcf, 0xa4, 0x14, 0xc7, 0x90, 0x7e, 0x98, 0xef, 0x31, 0x93, 0x4c, 0x89, 0x1a,
	0xc7, 0xe2, 0x12, 0xd2, 0x8d, 0x76, 0xe3, 0x44, 0x32, 0x75, 0x70, 0x7b, 0x52, 0xc6, 0xaa, 0x32,
	0xea, 0x33, 0xed, 0x6a, 0xa4, 0x93, 0x5f, 0x06, 0x62, 0x1f, 0x15, 0x17, 0x00, 0xab, 0xd0, 0xdb,
	0x6e, 0x39, 0xc7, 0x4d, 0xea, 0x9a, 0x0e, 0x6a, 0x11, 0xb3, 0xad, 0xb0, 0xb6, 0x5d, 0x78, 0xb8,
	0x9f, 0xef, 0xaa, 0x33, 0x14, 0x62, 0x86, 0xc2, 0x35, 0x08, 0xf3, 0xa9, 0xad, 0x23, 0x9e, 0x62,
	0x41, 0x35, 0xfa, 0xab, 0xb2, 0x3e, 0x79, 0x63, 0xd3, 0x41, 0xcd, 0x89, 0xa1, 0x77, 0x05, 0x7c,
	0x61, 0xdb, 0x9e, 0xb4, 0x4c, 0x32, 0x75, 0x48, 0xda, 0x4f, 0xf2, 0x82, 0xda, 0x08, 0x11, 0x5a,
	0xe7, 0xc0, 0x1b, 0xef, 0x63, 0xd9, 0x50, 0x32, 0xc5, 0x11, 0x62, 0xb2, 0xfd, 0x97, 0xd6, 0xaf,
	0x1b, 0x67, 0x08, 0xe7, 0x92, 0x29, 0xdc, 0x15, 0x31, 0x9b, 0x69, 0x57, 0x0d, 0xe9, 0x00, 0x15,
	0xbc, 0xf2, 0xf2, 0x31, 0xbe, 0xbe, 0xc9, 0xe9, 0x6c, 0x77, 0xff, 0x01, 0x00, 0x00, 0xff, 0xff,
	0xc8, 0xcb, 0xe5, 0x55, 0x6a, 0x01, 0x00, 0x00,
}
